stages:
  - build
  - build_and_deploy

variables:
  TAG_LATEST: $CI_COMMIT_REF_NAME:latest
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2

build:
  image: docker:latest
  stage: build
  services:
    - docker:18.09-dind
  script:
    - DOCKER_BUILDKIT=0 docker build -t $TAG_LATEST . --build-arg DOMAIN=$DOMAIN
    - docker save -o ./$TAG_LATEST.tar $TAG_LATEST

    - apk update && apk add bash docker-compose git nodejs npm yarn
    - cd ./backend && yarn install && yarn dap-client && yarn build
    - bash ./build-piston.sh
  except:
    - master

build_and_deploy:
  image: docker:latest
  stage: build_and_deploy
  services:
    - docker:18.09-dind
  tags:
    - deployment
  script:
    - DOCKER_BUILDKIT=0 docker build -t $TAG_LATEST . --build-arg DOMAIN=$DOMAIN
    - docker save -o ./$TAG_LATEST.tar $TAG_LATEST

    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - scp -i $ID_RSA -o StrictHostKeyChecking=no ./$TAG_LATEST.tar root@$SERVER_IP:~/$TAG_LATEST.tar
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "docker container rm -f fyp || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "test -d /etc/letsencrypt/live/$DOMAIN || ( apt update && apt install -y python3-certbot-nginx && certbot certonly --standalone -d $DOMAIN -d www.$DOMAIN --non-interactive --agree-tos -m $EMAIL )"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "docker load -i ~/$TAG_LATEST.tar"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "docker run -d --net=host -v /etc/letsencrypt:/etc/letsencrypt --name fyp $TAG_LATEST"

    - tar -czvf backend.tar.gz ./backend
    - scp -i $ID_RSA -o StrictHostKeyChecking=no ./backend.tar.gz root@$SERVER_IP:~/backend.tar.gz
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "~/backend/piston/piston stop || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "rm -rf ~/backend || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "tar -xvf ~/backend.tar.gz -C ~/ && rm ~/backend.tar.gz"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "apt update && apt install -y bash docker-compose git"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "cd ~/backend && npm i --global yarn && yarn install && yarn dap-client && yarn build"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "cd ~/backend && bash ./build-piston.sh"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "cd ~/backend/piston && docker exec piston_api sh -c 'rm -rf /piston/packages/*'"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "cd ~/backend/piston && ./cli/index.js ppman install nodedebug2=16.3.0 nodedebug2_ts=16.3.0 debugpy=3.10.0 codelldb_c=8.3.0 codelldb_cpp=8.3.0 codelldb_rs=1.65.0 netcoredbg_cs=5.0.201"
  environment:
    name: production
    url: http://$SERVER_IP
  only:
    - master
