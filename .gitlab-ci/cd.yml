stages:
  - build
  - build_and_deploy

variables:
  TAG_LATEST: $CI_COMMIT_REF_NAME:latest
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2

build:
  image: docker:latest
  stage: build
  services:
   - docker:18.09-dind
  script:
    - docker build -t $TAG_LATEST . --build-arg DOMAIN=$DOMAIN
    - docker save -o ./$TAG_LATEST.tar $TAG_LATEST
  except:
    - master

build_and_deploy:
  image: docker:latest
  stage: build_and_deploy
  services:
   - docker:18.09-dind
  tags:
    - deployment
  script:
    - docker build -t $TAG_LATEST . --build-arg DOMAIN=$DOMAIN
    - docker save -o ./$TAG_LATEST.tar $TAG_LATEST

    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - scp -i $ID_RSA -o StrictHostKeyChecking=no ./$TAG_LATEST.tar root@$SERVER_IP:~/$TAG_LATEST.tar
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "docker container rm -f fyp || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "test -d /etc/letsencrypt/live/$DOMAIN || ( apt update && apt install -y python3-certbot-nginx && certbot certonly --standalone -d $DOMAIN -d www.$DOMAIN --non-interactive --agree-tos -m $EMAIL )"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "docker load -i ~/$TAG_LATEST.tar"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no root@$SERVER_IP "docker run -d -p 80:80 -p 443:443 -v /etc/letsencrypt:/etc/letsencrypt --name fyp $TAG_LATEST"
  environment:
    name: production
    url: http://$SERVER_IP
  only:
    - master
